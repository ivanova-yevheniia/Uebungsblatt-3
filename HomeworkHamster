/**
 * Beschreiben Sie hier die Klasse HomeworkHamster.
 * 
 * @author Yevheniia Ivanova 
 * @version 01 08.12.2020
 */
public class HomeworkHamster extends HomeworkHamsterGame
{
    @Override
    protected void run(){
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnRight()");
        mysteriousPaule.turnRight();
        mysteriousPaule.write("Führe Operation aus: findLoss()");
        mysteriousPaule.findLoss();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnLeft()");
        mysteriousPaule.turnLeft();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnLeft()");
        mysteriousPaule.turnLeft();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnRight()");
        mysteriousPaule.turnRight();
        mysteriousPaule.write("Führe Operation aus: findLoss()");
        mysteriousPaule.findLoss();
        mysteriousPaule.write("Führe Operation aus: turnLeft()");
        mysteriousPaule.turnLeft();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: changeDirection()");
        mysteriousPaule.changeDirection(); 
        mysteriousPaule.write("Führe Operation aus: pickGrain()");
        mysteriousPaule.pickGrain();
        mysteriousPaule.write("Führe Operation aus: writeSteps()");
        mysteriousPaule.writeSteps();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnRight()");
        mysteriousPaule.turnRight();
        mysteriousPaule.write("Führe Operation aus: findLoss()");
        mysteriousPaule.findLoss();
        mysteriousPaule.write("Führe Operation aus: changeDirection()");
        mysteriousPaule.changeDirection();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: pickGrain()");
        mysteriousPaule.pickGrain();
        mysteriousPaule.write("Führe Operation aus: changeDirection()");
        mysteriousPaule.changeDirection();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: turnRight()");
        mysteriousPaule.turnRight();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: moveMessage()");
        mysteriousPaule.moveMessage();
        mysteriousPaule.write("Führe Operation aus: writeGeschafft()");
        mysteriousPaule.writeGeschafft();
    }

    mysterioushamster getHamster(){
        return mysteriousPaule;
    }
}
